{\rtf1\ansi\ansicpg932\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset128 Osaka;\f1\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red76\green76\blue76;\red0\green0\blue0;\red0\green0\blue255;
\red64\green128\blue0;\red74\green30\blue127;\red108\green5\blue211;\red128\green0\blue128;\red0\green22\blue176;
\red38\green18\blue82;}
\deftab480
\pard\pardeftab480\ql\qnatural\pardirnatural

\f0\fs24 \cf2 (*== setting property *)\cf3 \
\cf4 property\cf3  \cf5 _allowPackageContents\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
\cf4 property\cf3  \cf5 _useGUIScripting\cf3  : 
\f1 \cf6 true
\f0 \cf3 \
\cf4 property\cf3  \cf5 _allowClosedFolder\cf3  : 
\f1 \cf6 true
\f0 \cf3 \
\
\cf2 (*== store results *)\cf3 \
\cf4 property\cf3  \cf5 _lastResult\cf3  : 
\f1\i \cf4 missing value
\f0\i0 \cf3 \
\cf4 property\cf3  \cf5 _isFolderSelected\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
\
\cf2 (*== properties which have accessors *)\cf3 \
\cf4 property\cf3  \cf5 _determinedBySelection\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
\cf4 property\cf3  \cf5 _viewType\cf3  : 
\f1\i \cf4 missing value
\f0\i0 \cf3 \
\cf4 property\cf3  \cf5 _isLocationInWindow\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
\cf4 property\cf3  \cf5 _isClosedFolder\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
\cf4 property\cf3  \cf5 _targetWindow\cf3  : 
\f1\i \cf4 missing value
\f0\i0 \cf3 \
\
\cf4 property\cf3  
\f1 \cf7 name
\f0 \cf3  : \cf8 "InsertionLocator"\cf3 \
\
\cf2 (*!@title InsertionLocator Reference\
\
* Version : 1.3\
* Author : Tetsuro KURITA ((<tkurita@mac.com>))\
*)\cf3 \
\
\cf2 (*!@group Constructor Method \
@abstruct\
Make a new instance.\
*)\cf3 \
\cf4 on\cf3  
\f1\b \cf4 make
\f0\b0 \cf3 \
	\cf4 script\cf3  \cf5 InsertionLocator\cf3 \
		\cf2 (*== setting property *)\cf3 \
		\cf4 property\cf3  \cf5 _allowPackageContents\cf3  : \cf4 my\cf3  \cf5 _allowPackageContents\cf3 \
		\cf4 property\cf3  \cf5 _useGUIScripting\cf3  : \cf4 my\cf3  \cf5 _useGUIScripting\cf3 \
		\cf4 property\cf3  \cf5 _allowClosedFolder\cf3  : \cf4 my\cf3  \cf5 _allowClosedFolder\cf3 \
		\
		\cf2 (*== store results *)\cf3 \
		\cf4 property\cf3  \cf5 _lastResult\cf3  : 
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 property\cf3  \cf5 _isFolderSelected\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
		\
		\cf2 (*== properties which have accessors *)\cf3 \
		\cf4 property\cf3  \cf5 _determinedBySelection\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
		\cf4 property\cf3  \cf5 _viewType\cf3  : 
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 property\cf3  \cf5 _isLocationInWindow\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
		\cf4 property\cf3  \cf5 _isClosedFolder\cf3  : 
\f1 \cf6 false
\f0 \cf3 \
		\cf4 property\cf3  \cf5 _targetWindow\cf3  : 
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\
	\cf4 end\cf3  \cf4 script\cf3 \
\cf4 end\cf3  
\f1\b \cf4 make
\f0\b0 \cf3 \
\
\
\cf2 (*!@group Getting Insertion Location *)\cf3 \
\
\cf2 (*!\
@abstruct Getting selected location in Finder\
@result alias \
*)\cf3 \
\cf4 on\cf3  \cf5 do\cf3 ()\
	\cf5 initialize\cf3 ()\
	\cf4 local\cf3  \cf5 a_location\cf3 \
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  
\f1 \cf7 insertion location
\f0 \cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\
	\cf4 try\cf3 \
		\cf4 set\cf3  \cf5 a_class\cf3  \cf4 to\cf3  
\f1\i \cf4 class
\f0\i0 \cf3  \cf4 of\cf3  \cf5 a_location\cf3 \
		\cf4 set\cf3  \cf5 insertion_location_path\cf3  \cf4 to\cf3  \cf5 a_location\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 \
	\cf4 on\cf3  \cf4 error\cf3 \
		\cf2 -- error occur when \cf3 \
		\cf2 -- * Finder window is in search mode i.e current view is group view\cf3 \
		\cf2 -- * trash window is selected\cf3 \
		\cf2 -- * network is selected\cf3 \
		\cf2 -- a_location will be invalid value  folder ""\cf3 \
		\cf4 set\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 to\cf3  \cf5 process_for_special_items\cf3 ()\
		\cf4 return\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3 \
	\cf4 end\cf3  \cf4 try\cf3 \
	\
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\
		\cf4 try\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1 \cf7 container window
\f0 \cf3  \cf4 of\cf3  \cf5 a_location\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _viewType\cf3  \cf4 to\cf3  (
\f1 \cf7 current view
\f0 \cf3  \cf4 of\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3 )\
			\cf2 -- In following case error raise\cf3 \
			\cf2 -- * when a_location is first sub directory of package\cf3 \
			\cf2 --    reason : can't get current view\cf3 \
			\cf2 -- * when a_location is computer container \cf3 \
			\cf2 --    reason : can't get container window\cf3 \
		\cf4 on\cf3  \cf4 error\cf3 \
			\cf2 -- insertion location is package contents, therefore Finder window 1 must exists\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1\
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _viewType\cf3  \cf4 to\cf3  
\f1 \cf7 current view
\f0 \cf3  \cf4 of\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3 \
		\cf4 end\cf3  \cf4 try\cf3 \
		\
		\cf4 if\cf3  \cf5 a_class\cf3  \cf4 is not\cf3  \cf4 in\cf3  \{
\f1\i \cf4 folder
\f0\i0 \cf3 , 
\f1\i \cf4 disk
\f0\i0 \cf3 \} \cf4 then\cf3 \
			\cf4 if\cf3  \cf5 a_class\cf3  \cf4 is\cf3  (
\f1\i \cf4 class
\f0\i0 \cf3  \cf4 of\cf3  
\f1 \cf7 computer container
\f0 \cf3 ) \cf4 then\cf3 \
				\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
			\cf4 else\cf3 \
				\cf2 -- when insertion location is contents of package, the class of insertion location may be document file class\cf3 \
				\cf4 if\cf3  \cf4 not\cf3  \cf4 my\cf3  \cf5 _allowPackageContents\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  
\f1\i \cf4 folder
\f0\i0 \cf3  \cf4 of\cf3  \cf5 a_location\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\
	\cf4 set\cf3  \cf5 selected_location\cf3  \cf4 to\cf3  \cf5 location_for_selection\cf3 ()\
	\cf2 --log selected_location\cf3 \
	\cf4 if\cf3  \cf5 selected_location\cf3  \cf4 is\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3  \cf4 then\cf3 \
		\cf4 try\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 to\cf3  \cf5 a_location\cf3  \cf4 as\cf3  
\f1\i \cf4 alias
\f0\i0 \cf3 \
		\cf4 on\cf3  \cf4 error\cf3 \
			\cf2 -- if computer container is selected, a_location will be missing value.\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 end\cf3  \cf4 try\cf3 \
	\cf4 else\cf3 \
		\cf4 set\cf3  \cf4 my\cf3  \cf5 _determinedBySelection\cf3  \cf4 to\cf3  (\cf5 a_location\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3  \cf4 is\cf3  \cf4 not\cf3  \cf5 selected_location\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 )\
		\cf4 set\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 to\cf3  \cf5 selected_location\cf3  \cf4 as\cf3  
\f1\i \cf4 alias
\f0\i0 \cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\cf4 if\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1 
\f1\b \cf4 exists
\f0\b0 \cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf5 first_window_path\cf3  \cf4 to\cf3  
\f1 \cf7 target
\f0 \cf3  \cf4 of\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1 \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isLocationInWindow\cf3  \cf4 to\cf3  ((\cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 ) \cf4 starts with\cf3  \cf5 first_window_path\cf3 )\
			\cf4 if\cf3  \cf4 not\cf3  \cf4 my\cf3  \cf5 _isLocationInWindow\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 else\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\
	\cf4 if\cf3  (\cf4 my\cf3  \cf5 _determinedBySelection\cf3  \cf4 and\cf3  \cf4 my\cf3  \cf5 _isFolderSelected\cf3 ) \cf4 then\cf3 \
		\cf4 if\cf3  (\cf4 my\cf3  \cf5 _isLocationInWindow\cf3 ) \cf4 then\cf3 \
			\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
				\cf4 if\cf3  \cf4 my\cf3  \cf5 _viewType\cf3  \cf4 is\cf3  
\f1 \cf6 list view
\f0 \cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  (\cf4 not\cf3  \cf4 my\cf3  \cf5 is_expanded\cf3 ())\
				\cf4 else\cf3  \cf4 if\cf3  \cf4 my\cf3  \cf5 _viewType\cf3  \cf4 is\cf3  
\f1 \cf6 icon view
\f0 \cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  
\f1 \cf6 true
\f0 \cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 tell\cf3 \
		\cf4 else\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  
\f1 \cf6 true
\f0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\
		\cf4 if\cf3  (\cf4 not\cf3  \cf4 my\cf3  \cf5 _allowClosedFolder\cf3 ) \cf4 and\cf3  (\cf4 my\cf3  \cf5 _isClosedFolder\cf3 ) \cf4 then\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 to\cf3  
\f1\i \cf4 alias
\f0\i0 \cf3  (\cf5 get_container\cf3 (\cf4 my\cf3  \cf5 _lastResult\cf3 ))\
			\cf4 if\cf3  \cf5 insertion_location_path\cf3  \cf4 is\cf3  (\cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 ) \cf4 then\cf3 \
				\cf4 set\cf3  \cf4 my\cf3  \cf5 _determinedBySelection\cf3  \cf4 to\cf3  
\f1 \cf6 false
\f0 \cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  
\f1 \cf6 false
\f0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf4 return\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3 \
\cf4 end\cf3  \cf5 do\cf3 \
\
\
\cf2 (*!@group Customize Behaviors \
Handlers to customize behaviors. Following handlers should be called before ((<do>))().\
*)\cf3 \
\
\cf2 (*!\
@abstruct\
If true is given, the result of ((<do>))() may package or its contents.\
@description\
default is false\
@param a_flag (boolean)\
@result script object : me\
*)\cf3 \
\cf4 on\cf3  \cf5 set_allow_package_contents\cf3 (\cf5 a_flag\cf3 )\
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _allowPackageContents\cf3  \cf4 to\cf3  \cf5 a_flag\cf3 \
	\cf4 return\cf3  \cf4 me\cf3 \
\cf4 end\cf3  \cf5 set_allow_package_contents\cf3 \
\
\cf2 (*!\
@abstruct\
If false is given, commands depends of GUI Scripting is not used. But some functions are lost.\
@description\
The default value is true. If false is passed, ((<is_closed_folder>))() will not return correct value and the value passed to ((<set_allow_closed_folder>))() will be ignored in some cases.\
\
@param a_flag (boolean)\
@result script object : me\
*)\cf3 \
\cf4 on\cf3  \cf5 set_use_gui_scripting\cf3 (\cf5 a_flag\cf3 )\
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _useGUIScripting\cf3  \cf4 to\cf3  \cf5 a_flag\cf3 \
	\cf4 return\cf3  \cf4 me\cf3 \
\cf4 end\cf3  \cf5 set_use_gui_scripting\cf3 \
\
\cf2 (*!\
@abstruct\
If false is given, ((<do>))() should not return the folder whose contents are not visible.\
@description\
The default value is true. If false is passed,\
* selected folder in the icon view window is ignored.\
* ((<do>))() will return the parent folder of the collapsed selected folder in the list view window.\
@param a_flag (boolean)\
@result script object : me\
*)\cf3 \
\cf4 on\cf3  \cf5 set_allow_closed_folder\cf3 (\cf5 a_flag\cf3 )\
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _allowClosedFolder\cf3  \cf4 to\cf3  \cf5 a_flag\cf3 \
	\cf4 return\cf3  \cf4 me\cf3 \
\cf4 end\cf3  \cf5 set_allow_closed_folder\cf3 \
\
\cf2 (*!@group Accessors\
Handlers to access additional information related the result of ((<do>))().\
Following handlers can be used after ((<do>))().\
*)\cf3 \
\
\cf2 (*!\
@abstruct\
If the result of ((<do>))() is determined by selected items of Finder, true will be returned.\
\
@description\
The false means that the result of ((<do>))() is same to Finder's insertion location.\
@result boolean\
*)\cf3 \
\cf4 on\cf3  \cf5 is_determined_by_selection\cf3 ()\
	\cf4 return\cf3  \cf4 my\cf3  \cf5 _determinedBySelection\cf3 \
\cf4 end\cf3  \cf5 is_determined_by_selection\cf3 \
\
\cf2 (*!\
@abstruct\
If the result of ((<do>))() is contained in Finder window 1, true should be returned.\
@description\
The false means that the result of ((<do>))() is located in the desktop.\
@result boolean\
*)\cf3 \
\cf4 on\cf3  \cf5 is_location_in_window\cf3 ()\
	\cf4 return\cf3  \cf4 my\cf3  \cf5 _isLocationInWindow\cf3 \
\cf4 end\cf3  \cf5 is_location_in_window\cf3 \
\
\cf2 (*!\
@abstruct\
A reference to the window containing the result of ((<do>))() should be returned.\
@description\
If the result of ((<do>))() is Finder's desktop and its sub items (i.e. the result of ((<is_location_in_window>))() is false), missing value should be returned.\
@result boolean\
*)\cf3 \
\cf4 on\cf3  \cf5 target_window\cf3 ()\
	\cf4 return\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3 \
\cf4 end\cf3  \cf5 target_window\cf3 \
\
\
\cf2 (*!\
@abstruct\
The view type of  the window containing the result of ((<do>))().\
@description\
The possible values are icon view, list view, column view and group view.\
@result enumeration defined in Finder\
*)\cf3 \
\cf4 on\cf3  \cf5 view_type\cf3 ()\
	\cf4 return\cf3  \cf4 my\cf3  \cf5 _viewType\cf3 \
\cf4 end\cf3  \cf5 view_type\cf3 \
\
\cf2 (*!\
@abstruct\
If the contents of the result of ((<do>))() is not displayed in Finder, true should be returned.\
@description\
When a result of ((<do>))() is a target folder of a Finder window, false should be returned. \
If the result of ((<do>))() is a sub item of Finder window, true should be returned. \
But the view of the Finder window is list view and the item is expanded, false will be returned.\
*)\cf3 \
\cf4 on\cf3  \cf5 is_closed_folder\cf3 ()\
	\cf4 return\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3 \
\cf4 end\cf3  \cf5 is_closed_folder\cf3 \
\
\cf2 (*== Private *)\cf3 \
\cf4 on\cf3  \cf5 syslog\cf3 (\cf5 msg\cf3 )\
	\cf2 --activate\cf3 \
	\cf2 --display alert msg\cf3 \
	
\f1\b \cf4 log
\f0\b0 \cf3  \cf5 msg\cf3 \
	\cf4 set\cf3  \cf5 msg\cf3  \cf4 to\cf3  ((
\f1\b \cf9 current date
\f0\b0 \cf3 ) \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 ) & 
\f1 \cf7 space
\f0 \cf3  & (\cf4 my\cf3  
\f1 \cf7 name
\f0 \cf3 ) & 
\f1 \cf7 space
\f0 \cf3  & \cf5 msg\cf3 \
	
\f1\b \cf9 do shell script
\f0\b0 \cf3  \cf8 "syslog -s -l 5 "\cf3  & (\cf5 msg\cf3 's 
\f1 \cf7 quoted form
\f0 \cf3 )\
\cf4 end\cf3  \cf5 syslog\cf3 \
\
\cf4 on\cf3  \cf5 is_expanded\cf3 ()\
	\cf2 --syslog("start is_expanded")\cf3 \
	\cf4 if\cf3  \cf4 not\cf3  \cf4 my\cf3  \cf5 _useGUIScripting\cf3  \cf4 then\cf3 \
		\cf2 --log "GUI Scripting is disable."\cf3 \
		\cf4 return\cf3  
\f1 \cf6 false
\f0 \cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\cf4 set\cf3  \cf5 toolbar_visible\cf3  \cf4 to\cf3  
\f1 \cf7 toolbar visible
\f0 \cf3  \cf4 of\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3 \
		\cf4 set\cf3  \cf5 w_index\cf3  \cf4 to\cf3  
\f1 \cf7 index
\f0 \cf3  \cf4 of\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3 \
		\cf4 set\cf3  \cf5 is_frontmost\cf3  \cf4 to\cf3  
\f1 \cf7 frontmost
\f0 \cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf2 --syslog("Is Finder frontmost : " & is_frontmost)\cf3 \
	\cf2 --syslog("An index of a target window in Finder :" & w_index)\cf3 \
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\cf2 -- when Finder is not frontmost and floating palette is opened,\cf3 \
		\cf2 -- index of window is not match the index of window in System Events\cf3 \
		\cf2 -- frontmost property is decepetive,\cf3 \
		\cf2 --  because when non GUI application is activated frontmost will be true.\cf3 \
		\cf2 -- if (not frontmost) and (w_index > 1) then\cf3 \
		\cf4 if\cf3  \cf5 w_index\cf3  > 1 \cf4 then\cf3 \
			\cf4 set\cf3  \cf5 n\cf3  \cf4 to\cf3  \cf5 w_index\cf3  - 1\
			\cf4 repeat\cf3  \cf4 while\cf3  (\cf5 n\cf3  > 0)\
				\cf4 if\cf3  \cf4 not\cf3  
\f1 \cf7 visible
\f0 \cf3  \cf4 of\cf3  
\f1\i \cf4 window
\f0\i0 \cf3  \cf5 n\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf5 w_index\cf3  \cf4 to\cf3  \cf5 w_index\cf3  - 1\
				\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 set\cf3  \cf5 n\cf3  \cf4 to\cf3  \cf5 n\cf3  - 1\
			\cf4 end\cf3  \cf4 repeat\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 considering\cf3  
\f1 \cf6 numeric strings
\f0 \cf3 \
			\cf4 set\cf3  \cf5 is_snow_leopard\cf3  \cf4 to\cf3  
\f1\i \cf4 version
\f0\i0 \cf3  \cf4 is\cf3  \cf4 greater than\cf3  \cf4 or\cf3  \cf4 equal to\cf3  \cf8 "10.6"\cf3 \
		\cf4 end\cf3  \cf4 considering\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf2 (*\
	syslog("Shifted index by uncouting unvisible windows :" & w_index)\
	tell application "System Events"\
		tell application process "Finder"\
			set n to count windows\
		end tell\
	end tell\
	syslog("Number of windows in System Events:" & n)\
	*)\cf3 \
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "System Events"\cf3 \
		\cf4 tell\cf3  (
\f1\i \cf4 application process
\f0\i0 \cf3  \cf8 "Finder"\cf3 's 
\f1\i \cf4 window
\f0\i0 \cf3  \cf5 w_index\cf3 )\
			\cf4 if\cf3  \cf5 is_snow_leopard\cf3  \cf4 or\cf3  \cf5 toolbar_visible\cf3  \cf4 then\cf3 \
				\cf2 -- "a reference to" is used to keep index references.\cf3 \
				\cf2 -- when no "a reference to", the refrence is changed to a name reference.\cf3 \
				\cf2 -- The name reference causes an error when a view options pallete is opened,\cf3 \
				\cf2 -- because the parette have same name to the front Finder window.\cf3 \
				\cf4 set\cf3  \cf5 t\cf3  \cf4 to\cf3  \cf4 a reference\cf3  \cf4 to\cf3  
\f1\i \cf4 splitter group
\f0\i0 \cf3  1\
			\cf4 else\cf3 \
				\cf4 set\cf3  \cf5 t\cf3  \cf4 to\cf3  \cf4 a reference\cf3  \cf4 to\cf3  \cf4 it\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 set\cf3  \cf5 t\cf3  \cf4 to\cf3  \cf4 a reference\cf3  \cf4 to\cf3  
\f1\i \cf4 splitter group
\f0\i0 \cf3  1\
			\cf4 tell\cf3  
\f1\i \cf4 scroll area
\f0\i0 \cf3  -1 \cf4 of\cf3  \cf5 t\cf3 \
				\cf4 tell\cf3  
\f1\i \cf4 outline
\f0\i0 \cf3  1\
					\cf4 tell\cf3  (
\f1\i \cf4 row
\f0\i0 \cf3  1 \cf4 where\cf3  \cf4 it\cf3  \cf4 is\cf3  
\f1 \cf7 selected
\f0 \cf3 )\
						\cf4 set\cf3  \cf5 a_result\cf3  \cf4 to\cf3  
\f1 \cf7 value
\f0 \cf3  \cf4 of\cf3  
\f1\i \cf4 attribute
\f0\i0 \cf3  \cf8 "AXDisclosing"\cf3 \
					\cf4 end\cf3  \cf4 tell\cf3 \
				\cf4 end\cf3  \cf4 tell\cf3 \
			\cf4 end\cf3  \cf4 tell\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf2 --syslog("end is_expanded")\cf3 \
	\cf4 return\cf3  \cf5 a_result\cf3 \
\cf4 end\cf3  \cf5 is_expanded\cf3 \
\
\cf4 on\cf3  \cf5 debug\cf3 ()\
	\cf2 --set _allowClosedFolder to false\cf3 \
	\cf2 --activate application "Finder"\cf3 \
	
\f1\b \cf4 activate
\f0\b0 \cf3 \
	\cf2 --set_allow_closed_folder(false)\cf3 \
	\cf5 do\cf3 ()\
\cf4 end\cf3  \cf5 debug\cf3 \
\
\cf4 on\cf3  
\f1\b \cf4 run
\f0\b0 \cf3 \
	\cf2 --return debug()\cf3 \
	\cf4 try\cf3 \
		
\f1\b \cf9 show helpbook
\f0\b0 \cf3  (
\f1\b \cf9 path to
\f0\b0 \cf3  \cf4 me\cf3 ) \cf4 with\cf3  
\f1 \cf9 recovering InfoPlist
\f0 \cf3 \
	\cf4 on\cf3  \cf4 error\cf3  \cf5 msg\cf3  
\f1 \cf4 number
\f0 \cf3  \cf5 errno\cf3 \
		
\f1\b \cf9 display alert
\f0\b0 \cf3  (\cf5 msg\cf3  & 
\f1 \cf7 return
\f0 \cf3  & \cf5 errno\cf3 )\
	\cf4 end\cf3  \cf4 try\cf3 \
\cf4 end\cf3  
\f1\b \cf4 run
\f0\b0 \cf3 \
\
\cf4 on\cf3  \cf5 get_container\cf3 (\cf5 an_item\cf3 )\
	\cf2 -- use System Events to avoid Finder's problem that files in trash, folder property of items in trash return invalid value.\cf3 \
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "System Events"\cf3 \
		\cf4 return\cf3  
\f1 \cf7 path
\f0 \cf3  \cf4 of\cf3  
\f1 \cf7 container
\f0 \cf3  \cf4 of\cf3  \cf5 an_item\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 get_container\cf3 \
\
\cf4 on\cf3  \cf5 location_for_selection\cf3 ()\
	\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
	\
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\cf4 set\cf3  \cf5 selected_items\cf3  \cf4 to\cf3  
\f1 \cf7 selection
\f0 \cf3 \
		\cf4 if\cf3  \cf5 selected_items\cf3  \cf4 is\cf3  \{\} \cf4 then\cf3 \
			\cf4 return\cf3  \cf5 a_location\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 set\cf3  \cf5 an_item\cf3  \cf4 to\cf3  
\f1\i \cf4 item
\f0\i0 \cf3  1 \cf4 of\cf3  \cf5 selected_items\cf3 \
		\cf4 try\cf3 \
			\cf4 set\cf3  \cf5 a_path\cf3  \cf4 to\cf3  \cf5 an_item\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 \
		\cf4 on\cf3  \cf4 error\cf3 \
			\cf2 -- may an_item is trash\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isFolderSelected\cf3  \cf4 to\cf3  
\f1 \cf6 true
\f0 \cf3 \
			\cf4 return\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 end\cf3  \cf4 try\cf3 \
		\
		\cf4 if\cf3  (\cf5 an_item\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f1 \cf7 computer container
\f0 \cf3 ) \cf4 and\cf3  ((\cf5 an_item\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 ) \cf4 ends with\cf3  \cf8 ":"\cf3 ) \cf4 then\cf3 \
			\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf5 an_item\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isFolderSelected\cf3  \cf4 to\cf3  
\f1 \cf6 true
\f0 \cf3 \
		\cf4 else\cf3  \cf4 if\cf3  (
\f1\i \cf4 class
\f0\i0 \cf3  \cf4 of\cf3  \cf5 an_item\cf3  \cf4 is\cf3  
\f1\i \cf4 alias file
\f0\i0 \cf3 ) \cf4 then\cf3 \
			\cf4 try\cf3 \
				\cf4 set\cf3  \cf5 an_original\cf3  \cf4 to\cf3  
\f1 \cf7 original item
\f0 \cf3  \cf4 of\cf3  \cf5 an_item\cf3 \
			\cf4 on\cf3  \cf4 error\cf3 \
				\cf4 set\cf3  \cf5 an_original\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
			\
			\cf4 if\cf3  \cf5 an_original\cf3  \cf4 is\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 get_container\cf3 (\cf5 an_item\cf3  \cf4 as\cf3  
\f1\i \cf4 alias
\f0\i0 \cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  (\cf5 an_original\cf3  \cf4 as\cf3  
\f1\i \cf4 Unicode text
\f0\i0 \cf3 ) \cf4 ends with\cf3  \cf8 ":"\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf5 an_original\cf3 \
			\cf4 else\cf3 \
				\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 get_container\cf3 (\cf5 an_item\cf3  \cf4 as\cf3  
\f1\i \cf4 alias
\f0\i0 \cf3 )\
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 else\cf3 \
			\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 get_container\cf3 (\cf5 an_item\cf3  \cf4 as\cf3  
\f1\i \cf4 alias
\f0\i0 \cf3 )\
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\
	\cf4 return\cf3  \cf5 a_location\cf3 \
\cf4 end\cf3  \cf5 location_for_selection\cf3 \
\
\cf4 on\cf3  \cf5 trash_path\cf3 ()\
	\cf4 return\cf3  
\f1\b \cf9 path to
\f0\b0 \cf3  
\f1 \cf10 trash
\f0 \cf3 \
\cf4 end\cf3  \cf5 trash_path\cf3 \
\
\cf4 on\cf3  \cf5 process_for_special_items\cf3 ()\
	\cf2 -- process for ...\cf3 \
	\cf2 -- * Finder window is in search mode i.e current view is group view\cf3 \
	\cf2 --   * In Leopard, the view of Finder windw in search mode is not group view\cf3 \
	\cf2 -- * trash window is selected\cf3 \
	\cf2 -- * network is selected -- will return missing value\cf3 \
	\
	\cf4 tell\cf3  
\f1\i \cf4 application
\f0\i0 \cf3  \cf8 "Finder"\cf3 \
		\cf4 if\cf3  \cf4 not\cf3  (
\f1\b \cf4 exists
\f0\b0 \cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1) \cf4 then\cf3 \
			\cf4 return\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\
		\cf4 set\cf3  \cf5 a_name\cf3  \cf4 to\cf3  
\f1 \cf7 name
\f0 \cf3  \cf4 of\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1\
		\cf4 if\cf3  \cf5 a_name\cf3  \cf4 is\cf3  
\f1 \cf7 displayed name
\f0 \cf3  \cf4 of\cf3  
\f1 \cf7 trash
\f0 \cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 location_for_selection\cf3 ()\
			\cf4 if\cf3  \cf5 a_location\cf3  \cf4 is\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf5 a_location\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 trash_path\cf3 ()\
			\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1\
			\cf4 return\cf3  \cf5 a_location\cf3 \
			\
		\cf4 else\cf3  \cf4 if\cf3  
\f1 \cf7 current view
\f0 \cf3  \cf4 of\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1 \cf4 is\cf3  
\f1 \cf6 group view
\f0 \cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _viewType\cf3  \cf4 to\cf3  
\f1 \cf6 group view
\f0 \cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1\
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  
\f1 \cf6 true
\f0 \cf3 \
			\cf4 return\cf3  \cf4 my\cf3  \cf5 location_for_selection\cf3 ()\
			\
		\cf4 else\cf3  \cf4 if\cf3  
\f1 \cf7 URL
\f0 \cf3  \cf4 of\cf3  
\f1 \cf7 target
\f0 \cf3  \cf4 of\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1 \cf4 is\cf3  \cf8 ""\cf3  \cf4 then\cf3 \
			\cf2 -- Finder window in search mode in Mac OS X 10.5.8\cf3 \
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 Finder window
\f0\i0 \cf3  1\
			\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  
\f1 \cf6 true
\f0 \cf3 \
			\cf4 return\cf3  \cf4 my\cf3  \cf5 location_for_selection\cf3 ()\
			\
		\cf4 else\cf3  \cf2 -- Network and Unknown\cf3 \
			\cf4 return\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 process_for_special_items\cf3 \
\
\cf4 on\cf3  \cf5 initialize\cf3 ()\
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _viewType\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _determinedBySelection\cf3  \cf4 to\cf3  
\f1 \cf6 false
\f0 \cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _lastResult\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _isLocationInWindow\cf3  \cf4 to\cf3  
\f1 \cf6 false
\f0 \cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _isFolderSelected\cf3  \cf4 to\cf3  
\f1 \cf6 false
\f0 \cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _targetWindow\cf3  \cf4 to\cf3  
\f1\i \cf4 missing value
\f0\i0 \cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf5 _isClosedFolder\cf3  \cf4 to\cf3  
\f1 \cf6 false
\f0 \cf3 \
\cf4 end\cf3  \cf5 initialize\cf3 \
}